{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","updateState","target","value","className","s","form","e","preventDefault","autoComplete","type","pattern","title","required","input","onChange","button","Filter","filter","ContactListItem","props","id","onDelete","li","onClick","ContactList","contacts","arr","map","item","v4","ul","App","setContacts","setFilter","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","some","toLowerCase","alert","prevState","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,kBCA3DD,EAAOC,QAAU,CAAC,GAAK,4BAA4B,OAAS,kC,iBCA5DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,GAAK,0B,uJCoERC,EAjEK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAAC,GAAiC,IAAD,IAA9BC,OAAUL,EAAoB,EAApBA,KAAMM,EAAc,EAAdA,MACrC,OAAQN,GACN,IAAK,OACHC,EAAQK,GACR,MACF,IAAK,SACHH,EAAUG,GACV,MACF,QACE,SAWN,OACE,uBAAMC,UAAWC,IAAEC,KAAMX,SARN,SAACY,GACpBA,EAAEC,iBACFb,EAASE,EAAME,GACfD,EAAQ,IACRE,EAAU,KAIV,UACE,yCAEE,uBACES,aAAa,MACbC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRT,UAAWC,IAAES,MACbC,SAAUd,EACVE,MAAON,OAGX,2CAEE,uBACEY,aAAa,MACbC,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRT,UAAWC,IAAES,MACbC,SAAUd,EACVE,MAAOJ,OAGX,wBAAQW,KAAK,SAASN,UAAWC,IAAEW,OAAnC,6B,gBC9CSC,EATA,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SAChB,OACE,uBAAOX,UAAWC,IAAEa,OAAQR,KAAK,OAAOb,KAAK,SAASkB,SAAUA,K,iCCoBrDI,EAtBS,SAAC,GAA8C,IAAD,IAA3CC,MAASvB,EAAkC,EAAlCA,KAAME,EAA4B,EAA5BA,OAAQsB,EAAoB,EAApBA,GAAKC,EAAe,EAAfA,SAErD,OACE,qBAAIlB,UAAWC,IAAEkB,GAAIF,GAAIA,EAAzB,UACE,iCAAOxB,EAAP,OACA,+BAAOE,IACP,wBAAQW,KAAK,SAASN,UAAWC,IAAEW,OAAQQ,QAAS,kBAAMF,EAASD,IAAnE,wBCOSI,EAXK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUJ,EAAe,EAAfA,SAC3BK,EAAMD,EAASE,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAA4BT,MAAOS,EAAMP,SAAUA,GAA7BQ,kBAExB,OAAO,oBAAI1B,UAAWC,IAAE0B,GAAjB,SAAsBJ,KC4ChBK,EA9CH,WACV,MAAgCpC,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBO,EAAjB,KACA,EAA4BrC,mBAAS,IAArC,mBAAOsB,EAAP,KAAegB,EAAf,KAEAC,qBAAU,WACJC,aAAaC,QAAQ,aACvBJ,EAAYK,KAAKC,MAAMH,aAAaC,QAAQ,gBAE7C,IAEHF,qBAAU,WACRC,aAAaI,QAAQ,WAAYF,KAAKG,UAAUf,MAC/C,CAACA,IAuBJ,OACE,sBAAKtB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAaT,SAxBS,SAACE,EAAME,GAE7B2B,EAASgB,MAAK,SAACb,GAAD,OAAUA,EAAKhC,KAAK8C,gBAAkB9C,EAAK8C,iBAEzDC,MAAM,GAAD,OAAI/C,EAAJ,iCAGPoC,GAAY,SAACY,GAAD,4BAAmBA,GAAnB,CAA8B,CAAExB,GAAIS,cAAMjC,OAAME,kBAkB1D,0CACA,cAAC,EAAD,CAAQgB,SAjBG,SAAC,GAA2B,IAAfZ,EAAc,EAAxBD,OAAUC,MAC1B+B,EAAU/B,MAiBR,cAAC,EAAD,CAAauB,SAdfA,EAASR,QAAO,SAACW,GAAD,OACdA,EAAKhC,KAAK8C,cAAcG,SAAS5B,EAAOyB,kBAaFrB,SAVvB,SAACD,GAClBY,EAAYP,EAASR,QAAO,SAACW,GAAD,OAAUA,EAAKR,KAAOA,aClCtD0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d32f1af4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__156Jy\",\"input\":\"ContactForm_input__3GpId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__3ykD9\",\"button\":\"ContactListItem_button__1O-Gx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Kx-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2xrbr\"};","import { useState } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const updateState = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n          onChange={updateState}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={s.input}\r\n          onChange={updateState}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <input className={s.filter} type=\"text\" name=\"filter\" onChange={onChange} />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\nexport default Filter;\r\n","import s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ props : {name, number, id}, onDelete }) => {\r\n\r\n  return (\r\n    <li className={s.li} id={id}>\r\n      <span>{name}:</span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" className={s.button} onClick={() => onDelete(id)\r\n}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  props: PropTypes.shape ({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","import s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  let arr = contacts.map((item) => (\r\n    <ContactListItem key={v4()} props={item} onDelete={onDelete} />\r\n  ));\r\n  return <ul className={s.ul}>{arr}</ul>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","import { useState, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"contacts\")) {\n      setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (name, number) => {\n    if (\n      contacts.some((item) => item.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} is alerady in your contacts`);\n      return;\n    }\n    setContacts((prevState) => [...prevState, { id: v4(), name, number }]);\n  };\n  const search = ({ target: { value } }) => {\n    setFilter(value);\n  };\n  const filterItems = () =>\n    contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const deleteItem = (id) => {\n    setContacts(contacts.filter((item) => item.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter onChange={search} />\n      <ContactList contacts={filterItems()} onDelete={deleteItem} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}